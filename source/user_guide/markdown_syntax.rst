Markdown の記法
================

Kanboard は、コメントやタスクの詳細の記入に `Markdown
記法 <http://ja.wikipedia.org/wiki/Markdown>`__ を使用します。

改行
-----------

行末に2連続のスペースをつけると、そこで強制的に改行します:

::

    Hello  (<-- 2連続のスペース)
    World

::

    Hello
    World

空の行の挿入も同じ効果があります:

::

    Hello

    World

::

    Hello
    World

空の行や行末のスペースが無い場合、テキストは同じ行としてレンダリングされます:

::

    Hello
    World

::

    HelloWorld

強調
---------------

-  太字: 2つのアスタリスク(&#42;&#42;)か、2つのアンダーバー(&#095;&#095;)を使用します
-  斜体: 1つのアスタリスク(&#42;)か、1つのアンダーバー(&#095;)を使用します

ソースコード
~~~~~~

::

    この **言葉** はとても __重要__です

    また、一つの_アンダーバーかアスタリスク_で囲むと、*斜体*になります。

結果
~~~~~~

この **言葉** はとても **重要** です。

また、一つの *アンダーバーかアスタリスク* で囲むと、 *斜体* になります。

箇条書き
---------------

箇条書きは、アスタリスク、マイナス、プラスが使用可能です。

.. _ソース1-:

ソースコード
~~~~~~

::

    - Item 1
    - Item 2
    - Item 3

    もしくは

    * Item 1
    * Item 2
    * Item 3

.. _結果-1:

結果
~~~~~~

- 項目1
- 項目2
- 項目3

番号付きリスト
-------------

番号付きリストは、以下のように行頭に番号が付きます:

.. _ソース2:

ソースコード
~~~~~~

::

    1. 最初にやること
    2. やるべき事
    3. それからやること

.. _結果-2:

結果
~~~~~~

1. 最初にやること
2. やるべき事
3. それからやること

リンク
-----

.. _ソース-3:

ソースコード
~~~~~~

::

    [リンクのタイトル](https://kanboard.org/)

    <https://kanboard.org>

.. _結果-3:

結果
~~~~~~

`リンクのタイトル <https://kanboard.org/>`__

https://kanboard.org

ソースコード
-----------

インラインコード
~~~~~~~~~~~

バッククォート(``)を使用します。

::

    コマンド: `tail -f /var/log/messages` を実行する。

.. _結果-4:

結果
~~~~~~

コマンド: ``tail -f /var/log/messages`` を実行する。

コードブロック
~~~~~~~~~~~

3つのバッククォートを言語名と共に使用してください。

.. raw:: html

   <pre>
   <code class="language-markdown">```php
   &lt;?php

   phpinfo();

   ?&gt;
   ```
   </code>
   </pre>

.. _結果-5:

結果
~~~~~~

::

    <?php

    phpinfo();

    ?>

見出し
------

.. _ソース4:

ソースコード
~~~~~~

::

    # 見出し level 1

    ## 見出し level 2

    ### 見出し level 3
